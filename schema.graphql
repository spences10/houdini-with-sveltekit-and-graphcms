"""

"""
directive @defaultOverride(
  """
  List of arguments for which the defaults should be overridden. Currently only supports 'stage' and 'locales'.
  """
  args: [String!]!
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

"""

"""
directive @mark(
  """
  Marks an aggregate type
  """
  aggregate: Boolean

  """
  Link to the Main type of the connection
  """
  connection: String

  """
  Marks a countable type
  """
  countable: Boolean

  """
  Specifies model create input type
  """
  createInputType: String

  """
  Specifies model create localization type
  """
  createLocalizationInputType: String

  """
  Specifies system createdAt field
  """
  createdAtField: String

  """
  Marks if value is default
  """
  default: Boolean

  """
  Marks document version field on Query
  """
  documentVersion: Boolean

  """
  Marks an edge type
  """
  edge: Boolean

  """
  Specifies GraphCMS field type
  """
  fieldType: String

  """
  Marks filter and links to parent type
  """
  filter: String

  """
  Marks if corresponding field is list
  """
  filterIsList: Boolean

  """
  Marks filter kind
  """
  filterKind: _FilterKind

  """
  Specifies whether type is connect input
  """
  isConnectInput: Boolean

  """
  Marks list richText field return type
  """
  isListRichText: Boolean

  """
  Specifies relation input to be for abstract member type, not known master / origin side
  """
  isMemberInput: Boolean

  """
  marks if field is required (non-null)
  """
  isRequired: Boolean

  """
  Marks richText field return type
  """
  isRichTextType: Boolean

  """
  Marks relation fields that do not have a reverse side counterpart
  """
  isUnidirectional: Boolean

  """
  Marks a locale enum
  """
  locale: Boolean

  """
  Marks localizations field
  """
  localizations: Boolean

  """
  Marks if field is localized
  """
  localized: Boolean

  """
  Specifies model a type is part of
  """
  model: String

  """
  Marks versions field on model
  """
  modelVersions: Boolean

  """
  Marks kind of mutation input field
  """
  mutationInputFieldKind: _MutationInputFieldKind

  """
  Marks type of mutation kind
  """
  mutationKind: _MutationKind

  """
  Marks order by
  """
  order: Boolean

  """
  Marks order direction
  """
  orderDirection: _OrderDirection

  """
  Marks the pageInfo
  """
  pageInfo: Boolean

  """
  Specifies relation input cardinality
  """
  relationInputCardinality: _RelationInputCardinality

  """
  Specifies relation input kind
  """
  relationInputKind: _RelationInputKind

  """
  Specifies relation kind (e.g. union relation or regular field relation)
  """
  relationKind: _RelationKind

  """
  Specifies if the filter's value can be replaced by the current user's id
  """
  replaceableWithUserId: Boolean

  """
  Specifies relation input cardinality of reverse side
  """
  reverseRelationInputCardinality: _RelationInputCardinality

  """
  The name of the associated RichText type
  """
  richTextType: String

  """
  Marks stages field
  """
  stages: Boolean

  """
  The model's storage ID
  """
  storageId: String

  """
  Specifies mode of system DateTime fields
  """
  systemDateTimeFieldVariation: _SystemDateTimeFieldVariation

  """
  Specifies union type name
  """
  unionType: Boolean

  """
  Specifies system updatedAt field
  """
  updatedAtField: String

  """
  Marks asset url handler
  """
  url: Boolean

  """
  Adds field validations
  """
  validations: String

  """
  If versioned, documents of this model will be able to hold this amount of versions per stage
  """
  versionRetentionCount: Int

  """
  If versioned, on publishing versions older than x days will be dropped
  """
  versionRetentionPeriod: Int

  """
  Specifies WhereUniqueInput type name
  """
  whereUniqueInput: String
) on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | OBJECT

"""

"""
directive @permission(
  """
  Policy action names.
  """
  actions: [String!]

  """
  Policy resource names.
  """
  resources: [String!]
) on FIELD_DEFINITION

"""

"""
directive @psql(
  """
  postgres column name
  """
  column: [String!]

  """
  hardcoded postgres id value for enums
  """
  id: String

  """
  Specifies column for system id field
  """
  idColumn: String

  """
  postgres join on name
  """
  join: [String!]

  """
  postgres localization table name
  """
  localizationTable: String

  """
  Specifies columns for union member fields
  """
  memberColumns: [String!]

  """
  Specifies column for native sorting for relational fields
  """
  prio: String

  """
  postgres table name
  """
  table: String

  """
  Specifies system updatedAt column
  """
  updatedAtColumn: String
) on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | OBJECT

"""

"""
directive @remote(
  """
  optional headers that will be sent in the remote call
  """
  headers: Json

  """
  HTTP method used to fetch the remote content from
  """
  method: String!

  """
  list of field storage ids that will available for templates and parameters for the remote call
  """
  payloadFields: [String!]!

  """
  list of field apiIds that should be send as payload in the remote call
  """
  requestParamFields: [String!]!

  """
  url to fetch the remote content from
  """
  url: String!
) on FIELD_DEFINITION

"""

"""
type Aggregate {
  """

  """
  count: Int!
}

"""
Asset system model
"""
type Asset implements Node {
  """

  """
  authorAvatar(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `authorAvatar` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    orderBy: AuthorOrderByInput

    """

    """
    skip: Int

    """

    """
    where: AuthorWhereInput
  ): [Author!]!

  """

  """
  coverImagePost(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `coverImagePost` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    orderBy: PostOrderByInput

    """

    """
    skip: Int

    """

    """
    where: PostWhereInput
  ): [Post!]!

  """
  The time the document was created
  """
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Asset!]!

  """
  The file name
  """
  fileName: String!

  """
  The file handle
  """
  handle: String!

  """
  The height of the file
  """
  height: Float

  """
  List of Asset versions
  """
  history(
    """

    """
    limit: Int! = 10

    """

    """
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  System Locale field
  """
  locale: Locale!

  """
  Get the other localizations for this document
  """
  localizations(
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [en]
  ): [Asset!]!

  """
  The mime type of the file
  """
  mimeType: String

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """

  """
  scheduledIn(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """

  """
  seoImage(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `seoImage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    orderBy: SeoOrderByInput

    """

    """
    skip: Int

    """

    """
    where: SeoWhereInput
  ): [Seo!]!

  """
  The file size
  """
  size: Float

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the url for the asset with provided transformations applied.
  """
  url(transformation: AssetTransformationInput): String!

  """
  The file width
  """
  width: Float
}

"""

"""
input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: AssetWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type AssetConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [AssetEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input AssetCreateInput {
  """

  """
  authorAvatar: AuthorCreateManyInlineInput

  """

  """
  coverImagePost: PostCreateManyInlineInput

  """

  """
  createdAt: DateTime

  """

  """
  fileName: String!

  """

  """
  handle: String!

  """

  """
  height: Float

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput

  """

  """
  mimeType: String

  """

  """
  seoImage: SeoCreateManyInlineInput

  """

  """
  size: Float

  """

  """
  updatedAt: DateTime

  """

  """
  width: Float
}

"""

"""
input AssetCreateLocalizationDataInput {
  """

  """
  createdAt: DateTime

  """

  """
  fileName: String!

  """

  """
  handle: String!

  """

  """
  height: Float

  """

  """
  mimeType: String

  """

  """
  size: Float

  """

  """
  updatedAt: DateTime

  """

  """
  width: Float
}

"""

"""
input AssetCreateLocalizationInput {
  """
  Localization input
  """
  data: AssetCreateLocalizationDataInput!

  """

  """
  locale: Locale!
}

"""

"""
input AssetCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [AssetCreateLocalizationInput!]
}

"""

"""
input AssetCreateManyInlineInput {
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetWhereUniqueInput!]

  """
  Create and connect multiple existing Asset documents
  """
  create: [AssetCreateInput!]
}

"""

"""
input AssetCreateOneInlineInput {
  """
  Connect one existing Asset document
  """
  connect: AssetWhereUniqueInput

  """
  Create and connect one Asset document
  """
  create: AssetCreateInput
}

"""
An edge in a connection.
"""
type AssetEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Asset!
}

"""
Identifies documents
"""
input AssetManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  authorAvatar_every: AuthorWhereInput

  """

  """
  authorAvatar_none: AuthorWhereInput

  """

  """
  authorAvatar_some: AuthorWhereInput

  """

  """
  coverImagePost_every: PostWhereInput

  """

  """
  coverImagePost_none: PostWhereInput

  """

  """
  coverImagePost_some: PostWhereInput

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seoImage_every: SeoWhereInput

  """

  """
  seoImage_none: SeoWhereInput

  """

  """
  seoImage_some: SeoWhereInput

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum AssetOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  fileName_ASC

  """

  """
  fileName_DESC

  """

  """
  handle_ASC

  """

  """
  handle_DESC

  """

  """
  height_ASC

  """

  """
  height_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  mimeType_ASC

  """

  """
  mimeType_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  size_ASC

  """

  """
  size_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC

  """

  """
  width_ASC

  """

  """
  width_DESC
}

"""
Transformations for Assets
"""
input AssetTransformationInput {
  """

  """
  document: DocumentTransformationInput

  """

  """
  image: ImageTransformationInput

  """
  Pass true if you want to validate the passed transformation parameters
  """
  validateOptions: Boolean = false
}

"""

"""
input AssetUpdateInput {
  """

  """
  authorAvatar: AuthorUpdateManyInlineInput

  """

  """
  coverImagePost: PostUpdateManyInlineInput

  """

  """
  fileName: String

  """

  """
  handle: String

  """

  """
  height: Float

  """
  Manage document localizations
  """
  localizations: AssetUpdateLocalizationsInput

  """

  """
  mimeType: String

  """

  """
  seoImage: SeoUpdateManyInlineInput

  """

  """
  size: Float

  """

  """
  width: Float
}

"""

"""
input AssetUpdateLocalizationDataInput {
  """

  """
  fileName: String

  """

  """
  handle: String

  """

  """
  height: Float

  """

  """
  mimeType: String

  """

  """
  size: Float

  """

  """
  width: Float
}

"""

"""
input AssetUpdateLocalizationInput {
  """

  """
  data: AssetUpdateLocalizationDataInput!

  """

  """
  locale: Locale!
}

"""

"""
input AssetUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [AssetCreateLocalizationInput!]

  """
  Localizations to delete
  """
  delete: [Locale!]

  """
  Localizations to update
  """
  update: [AssetUpdateLocalizationInput!]

  """

  """
  upsert: [AssetUpsertLocalizationInput!]
}

"""

"""
input AssetUpdateManyInlineInput {
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetConnectInput!]

  """
  Create and connect multiple Asset documents
  """
  create: [AssetCreateInput!]

  """
  Delete multiple Asset documents
  """
  delete: [AssetWhereUniqueInput!]

  """
  Disconnect multiple Asset documents
  """
  disconnect: [AssetWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """
  Update multiple Asset documents
  """
  update: [AssetUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Asset documents
  """
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input AssetUpdateManyInput {
  """

  """
  fileName: String

  """

  """
  height: Float

  """
  Optional updates to localizations
  """
  localizations: AssetUpdateManyLocalizationsInput

  """

  """
  mimeType: String

  """

  """
  size: Float

  """

  """
  width: Float
}

"""

"""
input AssetUpdateManyLocalizationDataInput {
  """

  """
  fileName: String

  """

  """
  height: Float

  """

  """
  mimeType: String

  """

  """
  size: Float

  """

  """
  width: Float
}

"""

"""
input AssetUpdateManyLocalizationInput {
  """

  """
  data: AssetUpdateManyLocalizationDataInput!

  """

  """
  locale: Locale!
}

"""

"""
input AssetUpdateManyLocalizationsInput {
  """
  Localizations to update
  """
  update: [AssetUpdateManyLocalizationInput!]
}

"""

"""
input AssetUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: AssetUpdateManyInput!

  """
  Document search
  """
  where: AssetWhereInput!
}

"""

"""
input AssetUpdateOneInlineInput {
  """
  Connect existing Asset document
  """
  connect: AssetWhereUniqueInput

  """
  Create and connect one Asset document
  """
  create: AssetCreateInput

  """
  Delete currently connected Asset document
  """
  delete: Boolean

  """
  Disconnect currently connected Asset document
  """
  disconnect: Boolean

  """
  Update single Asset document
  """
  update: AssetUpdateWithNestedWhereUniqueInput

  """
  Upsert single Asset document
  """
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

"""

"""
input AssetUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: AssetUpdateInput!

  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
}

"""

"""
input AssetUpsertInput {
  """
  Create document if it didn't exist
  """
  create: AssetCreateInput!

  """
  Update document if it exists
  """
  update: AssetUpdateInput!
}

"""

"""
input AssetUpsertLocalizationInput {
  """

  """
  create: AssetCreateLocalizationDataInput!

  """

  """
  locale: Locale!

  """

  """
  update: AssetUpdateLocalizationDataInput!
}

"""

"""
input AssetUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: AssetUpsertInput!

  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
}

"""
Identifies documents
"""
input AssetWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  authorAvatar_every: AuthorWhereInput

  """

  """
  authorAvatar_none: AuthorWhereInput

  """

  """
  authorAvatar_some: AuthorWhereInput

  """

  """
  coverImagePost_every: PostWhereInput

  """

  """
  coverImagePost_none: PostWhereInput

  """

  """
  coverImagePost_some: PostWhereInput

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  fileName: String

  """
  All values containing the given string.
  """
  fileName_contains: String

  """
  All values ending with the given string.
  """
  fileName_ends_with: String

  """
  All values that are contained in given list.
  """
  fileName_in: [String!]

  """
  All values that are not equal to given value.
  """
  fileName_not: String

  """
  All values not containing the given string.
  """
  fileName_not_contains: String

  """
  All values not ending with the given string
  """
  fileName_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  fileName_not_in: [String!]

  """
  All values not starting with the given string.
  """
  fileName_not_starts_with: String

  """
  All values starting with the given string.
  """
  fileName_starts_with: String

  """

  """
  handle: String

  """
  All values containing the given string.
  """
  handle_contains: String

  """
  All values ending with the given string.
  """
  handle_ends_with: String

  """
  All values that are contained in given list.
  """
  handle_in: [String!]

  """
  All values that are not equal to given value.
  """
  handle_not: String

  """
  All values not containing the given string.
  """
  handle_not_contains: String

  """
  All values not ending with the given string
  """
  handle_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  handle_not_in: [String!]

  """
  All values not starting with the given string.
  """
  handle_not_starts_with: String

  """
  All values starting with the given string.
  """
  handle_starts_with: String

  """

  """
  height: Float

  """
  All values greater than the given value.
  """
  height_gt: Float

  """
  All values greater than or equal the given value.
  """
  height_gte: Float

  """
  All values that are contained in given list.
  """
  height_in: [Float!]

  """
  All values less than the given value.
  """
  height_lt: Float

  """
  All values less than or equal the given value.
  """
  height_lte: Float

  """
  All values that are not equal to given value.
  """
  height_not: Float

  """
  All values that are not contained in given list.
  """
  height_not_in: [Float!]

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  mimeType: String

  """
  All values containing the given string.
  """
  mimeType_contains: String

  """
  All values ending with the given string.
  """
  mimeType_ends_with: String

  """
  All values that are contained in given list.
  """
  mimeType_in: [String!]

  """
  All values that are not equal to given value.
  """
  mimeType_not: String

  """
  All values not containing the given string.
  """
  mimeType_not_contains: String

  """
  All values not ending with the given string
  """
  mimeType_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  mimeType_not_in: [String!]

  """
  All values not starting with the given string.
  """
  mimeType_not_starts_with: String

  """
  All values starting with the given string.
  """
  mimeType_starts_with: String

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seoImage_every: SeoWhereInput

  """

  """
  seoImage_none: SeoWhereInput

  """

  """
  seoImage_some: SeoWhereInput

  """

  """
  size: Float

  """
  All values greater than the given value.
  """
  size_gt: Float

  """
  All values greater than or equal the given value.
  """
  size_gte: Float

  """
  All values that are contained in given list.
  """
  size_in: [Float!]

  """
  All values less than the given value.
  """
  size_lt: Float

  """
  All values less than or equal the given value.
  """
  size_lte: Float

  """
  All values that are not equal to given value.
  """
  size_not: Float

  """
  All values that are not contained in given list.
  """
  size_not_in: [Float!]

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput

  """

  """
  width: Float

  """
  All values greater than the given value.
  """
  width_gt: Float

  """
  All values greater than or equal the given value.
  """
  width_gte: Float

  """
  All values that are contained in given list.
  """
  width_in: [Float!]

  """
  All values less than the given value.
  """
  width_lt: Float

  """
  All values less than or equal the given value.
  """
  width_lte: Float

  """
  All values that are not equal to given value.
  """
  width_not: Float

  """
  All values that are not contained in given list.
  """
  width_not_in: [Float!]
}

"""
References Asset record uniquely
"""
input AssetWhereUniqueInput {
  """

  """
  id: ID
}

"""

"""
type Author implements Node {
  """
  Enter a short bio about yourself, or other authors.
  """
  biography: String

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Author!]!

  """
  List of Author versions
  """
  history(
    """

    """
    limit: Int! = 10

    """

    """
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  Enter the display name for authors
  """
  name: String!

  """
  Add a profile picture for authors
  """
  picture(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `picture` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """
  Connect blog posts to this author
  """
  posts(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `posts` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    orderBy: PostOrderByInput

    """

    """
    skip: Int

    """

    """
    where: PostWhereInput
  ): [Post!]!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """

  """
  scheduledIn(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  System stage field
  """
  stage: Stage!

  """
  Enter the job title of the author
  """
  title: String

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
input AuthorConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: AuthorWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type AuthorConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [AuthorEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input AuthorCreateInput {
  """

  """
  biography: String

  """

  """
  createdAt: DateTime

  """

  """
  name: String!

  """

  """
  picture: AssetCreateOneInlineInput

  """

  """
  posts: PostCreateManyInlineInput

  """

  """
  title: String

  """

  """
  updatedAt: DateTime
}

"""

"""
input AuthorCreateManyInlineInput {
  """
  Connect multiple existing Author documents
  """
  connect: [AuthorWhereUniqueInput!]

  """
  Create and connect multiple existing Author documents
  """
  create: [AuthorCreateInput!]
}

"""

"""
input AuthorCreateOneInlineInput {
  """
  Connect one existing Author document
  """
  connect: AuthorWhereUniqueInput

  """
  Create and connect one Author document
  """
  create: AuthorCreateInput
}

"""
An edge in a connection.
"""
type AuthorEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Author!
}

"""
Identifies documents
"""
input AuthorManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AuthorWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AuthorWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AuthorWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  biography: String

  """
  All values containing the given string.
  """
  biography_contains: String

  """
  All values ending with the given string.
  """
  biography_ends_with: String

  """
  All values that are contained in given list.
  """
  biography_in: [String!]

  """
  All values that are not equal to given value.
  """
  biography_not: String

  """
  All values not containing the given string.
  """
  biography_not_contains: String

  """
  All values not ending with the given string
  """
  biography_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  biography_not_in: [String!]

  """
  All values not starting with the given string.
  """
  biography_not_starts_with: String

  """
  All values starting with the given string.
  """
  biography_starts_with: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """

  """
  picture: AssetWhereInput

  """

  """
  posts_every: PostWhereInput

  """

  """
  posts_none: PostWhereInput

  """

  """
  posts_some: PostWhereInput

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum AuthorOrderByInput {
  """

  """
  biography_ASC

  """

  """
  biography_DESC

  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  name_ASC

  """

  """
  name_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  title_ASC

  """

  """
  title_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""

"""
input AuthorUpdateInput {
  """

  """
  biography: String

  """

  """
  name: String

  """

  """
  picture: AssetUpdateOneInlineInput

  """

  """
  posts: PostUpdateManyInlineInput

  """

  """
  title: String
}

"""

"""
input AuthorUpdateManyInlineInput {
  """
  Connect multiple existing Author documents
  """
  connect: [AuthorConnectInput!]

  """
  Create and connect multiple Author documents
  """
  create: [AuthorCreateInput!]

  """
  Delete multiple Author documents
  """
  delete: [AuthorWhereUniqueInput!]

  """
  Disconnect multiple Author documents
  """
  disconnect: [AuthorWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Author documents
  """
  set: [AuthorWhereUniqueInput!]

  """
  Update multiple Author documents
  """
  update: [AuthorUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Author documents
  """
  upsert: [AuthorUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input AuthorUpdateManyInput {
  """

  """
  biography: String

  """

  """
  name: String

  """

  """
  title: String
}

"""

"""
input AuthorUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: AuthorUpdateManyInput!

  """
  Document search
  """
  where: AuthorWhereInput!
}

"""

"""
input AuthorUpdateOneInlineInput {
  """
  Connect existing Author document
  """
  connect: AuthorWhereUniqueInput

  """
  Create and connect one Author document
  """
  create: AuthorCreateInput

  """
  Delete currently connected Author document
  """
  delete: Boolean

  """
  Disconnect currently connected Author document
  """
  disconnect: Boolean

  """
  Update single Author document
  """
  update: AuthorUpdateWithNestedWhereUniqueInput

  """
  Upsert single Author document
  """
  upsert: AuthorUpsertWithNestedWhereUniqueInput
}

"""

"""
input AuthorUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: AuthorUpdateInput!

  """
  Unique document search
  """
  where: AuthorWhereUniqueInput!
}

"""

"""
input AuthorUpsertInput {
  """
  Create document if it didn't exist
  """
  create: AuthorCreateInput!

  """
  Update document if it exists
  """
  update: AuthorUpdateInput!
}

"""

"""
input AuthorUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: AuthorUpsertInput!

  """
  Unique document search
  """
  where: AuthorWhereUniqueInput!
}

"""
Identifies documents
"""
input AuthorWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AuthorWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AuthorWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AuthorWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  biography: String

  """
  All values containing the given string.
  """
  biography_contains: String

  """
  All values ending with the given string.
  """
  biography_ends_with: String

  """
  All values that are contained in given list.
  """
  biography_in: [String!]

  """
  All values that are not equal to given value.
  """
  biography_not: String

  """
  All values not containing the given string.
  """
  biography_not_contains: String

  """
  All values not ending with the given string
  """
  biography_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  biography_not_in: [String!]

  """
  All values not starting with the given string.
  """
  biography_not_starts_with: String

  """
  All values starting with the given string.
  """
  biography_starts_with: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """

  """
  picture: AssetWhereInput

  """

  """
  posts_every: PostWhereInput

  """

  """
  posts_none: PostWhereInput

  """

  """
  posts_some: PostWhereInput

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References Author record uniquely
"""
input AuthorWhereUniqueInput {
  """

  """
  id: ID
}

"""

"""
type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  """

  """
  css: String!

  """

  """
  hex: Hex!

  """

  """
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  """

  """
  hex: Hex

  """

  """
  rgba: RGBAInput
}

"""

"""
input ConnectPositionInput {
  """
  Connect document after specified document
  """
  after: ID

  """
  Connect document before specified document
  """
  before: ID

  """
  Connect document at last position
  """
  end: Boolean

  """
  Connect document at first position
  """
  start: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

"""

"""
enum DocumentFileTypes {
  """

  """
  doc

  """

  """
  docx

  """

  """
  html

  """

  """
  jpg

  """

  """
  odp

  """

  """
  ods

  """

  """
  odt

  """

  """
  pdf

  """

  """
  png

  """

  """
  ppt

  """

  """
  pptx

  """

  """
  svg

  """

  """
  txt

  """

  """
  webp

  """

  """
  xls

  """

  """
  xlsx
}

"""

"""
input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:

  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""
Transformations for Documents
"""
input DocumentTransformationInput {
  """
  Changes the output for the file.
  """
  output: DocumentOutputInput
}

"""

"""
type DocumentVersion {
  """

  """
  createdAt: DateTime!

  """

  """
  data: Json

  """

  """
  id: ID!

  """

  """
  revision: Int!

  """

  """
  stage: Stage!
}

"""

"""
scalar Hex

"""

"""
enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max

  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

"""

"""
input ImageResizeInput {
  """
  The default value for the fit parameter is fit:clip.
  """
  fit: ImageFit

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""
Transformations for Images
"""
input ImageTransformationInput {
  """
  Resizes the image
  """
  resize: ImageResizeInput
}

"""
Raw JSON value
"""
scalar Json

"""
Locale system enumeration
"""
enum Locale {
  """
  System locale
  """
  en
}

"""
Representing a geolocation point with latitude and longitude
"""
type Location {
  """

  """
  distance(from: LocationInput!): Float!

  """

  """
  latitude: Float!

  """

  """
  longitude: Float!
}

"""
Input for a geolocation point with latitude and longitude
"""
input LocationInput {
  """

  """
  latitude: Float!

  """

  """
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

"""

"""
type Mutation {
  """
  Create one asset
  """
  createAsset(data: AssetCreateInput!): Asset
    @deprecated(reason: "Asset mutations will be overhauled soon")

  """
  Create one author
  """
  createAuthor(data: AuthorCreateInput!): Author

  """
  Create one page
  """
  createPage(data: PageCreateInput!): Page

  """
  Create one post
  """
  createPost(data: PostCreateInput!): Post

  """
  Create one scheduledRelease
  """
  createScheduledRelease(
    data: ScheduledReleaseCreateInput!
  ): ScheduledRelease

  """
  Create one seo
  """
  createSeo(data: SeoCreateInput!): Seo

  """
  Delete one asset from _all_ existing stages. Returns deleted document.
  """
  deleteAsset(
    """
    Document to delete
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Delete one author from _all_ existing stages. Returns deleted document.
  """
  deleteAuthor(
    """
    Document to delete
    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Delete many Asset documents
  """
  deleteManyAssets(
    """
    Documents to delete
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)"
    )

  """
  Delete many Asset documents, return deleted documents
  """
  deleteManyAssetsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to delete
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Delete many Author documents
  """
  deleteManyAuthors(
    """
    Documents to delete
    """
    where: AuthorManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyAuthorsConnection)"
    )

  """
  Delete many Author documents, return deleted documents
  """
  deleteManyAuthorsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to delete
    """
    where: AuthorManyWhereInput
  ): AuthorConnection!

  """
  Delete many Page documents
  """
  deleteManyPages(
    """
    Documents to delete
    """
    where: PageManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyPagesConnection)"
    )

  """
  Delete many Page documents, return deleted documents
  """
  deleteManyPagesConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to delete
    """
    where: PageManyWhereInput
  ): PageConnection!

  """
  Delete many Post documents
  """
  deleteManyPosts(
    """
    Documents to delete
    """
    where: PostManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyPostsConnection)"
    )

  """
  Delete many Post documents, return deleted documents
  """
  deleteManyPostsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to delete
    """
    where: PostManyWhereInput
  ): PostConnection!

  """
  Delete many Seo documents
  """
  deleteManySeos(
    """
    Documents to delete
    """
    where: SeoManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManySeosConnection)"
    )

  """
  Delete many Seo documents, return deleted documents
  """
  deleteManySeosConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to delete
    """
    where: SeoManyWhereInput
  ): SeoConnection!

  """
  Delete one page from _all_ existing stages. Returns deleted document.
  """
  deletePage(
    """
    Document to delete
    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Delete one post from _all_ existing stages. Returns deleted document.
  """
  deletePost(
    """
    Document to delete
    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Delete and return scheduled operation
  """
  deleteScheduledOperation(
    """
    Document to delete
    """
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """
    Document to delete
    """
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Delete one seo from _all_ existing stages. Returns deleted document.
  """
  deleteSeo(
    """
    Document to delete
    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Publish one asset
  """
  publishAsset(
    """
    Optional localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AssetWhereUniqueInput!

    """
    Whether to include the default locale when publishBase is set
    """
    withDefaultLocale: Boolean = true
  ): Asset

  """
  Publish one author
  """
  publishAuthor(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Publish many Asset documents
  """
  publishManyAssets(
    """
    Document localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AssetManyWhereInput

    """
    Whether to include the default locale when publishBase is true
    """
    withDefaultLocale: Boolean = true
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyAssetsConnection)"
    )

  """
  Publish many Asset documents
  """
  publishManyAssetsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT

    """

    """
    last: Int

    """
    Document localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """

    """
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AssetManyWhereInput

    """
    Whether to include the default locale when publishBase is true
    """
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """
  Publish many Author documents
  """
  publishManyAuthors(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AuthorManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyAuthorsConnection)"
    )

  """
  Publish many Author documents
  """
  publishManyAuthorsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AuthorManyWhereInput
  ): AuthorConnection!

  """
  Publish many Page documents
  """
  publishManyPages(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: PageManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyPagesConnection)"
    )

  """
  Publish many Page documents
  """
  publishManyPagesConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: PageManyWhereInput
  ): PageConnection!

  """
  Publish many Post documents
  """
  publishManyPosts(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: PostManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyPostsConnection)"
    )

  """
  Publish many Post documents
  """
  publishManyPostsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: PostManyWhereInput
  ): PostConnection!

  """
  Publish many Seo documents
  """
  publishManySeos(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: SeoManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManySeosConnection)"
    )

  """
  Publish many Seo documents
  """
  publishManySeosConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: SeoManyWhereInput
  ): SeoConnection!

  """
  Publish one page
  """
  publishPage(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Publish one post
  """
  publishPost(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Publish one seo
  """
  publishSeo(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Schedule to publish one asset
  """
  schedulePublishAsset(
    """
    Optional localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AssetWhereUniqueInput!

    """
    Whether to include the default locale when publishBase is set
    """
    withDefaultLocale: Boolean = true
  ): Asset

  """
  Schedule to publish one author
  """
  schedulePublishAuthor(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Schedule to publish one page
  """
  schedulePublishPage(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Schedule to publish one post
  """
  schedulePublishPost(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Schedule to publish one seo
  """
  schedulePublishSeo(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """
    Document to unpublish
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one author from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAuthor(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Unpublish one page from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishPage(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Unpublish one post from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishPost(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishSeo(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """
    Document to unpublish
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one author from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAuthor(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Unpublish many Asset documents
  """
  unpublishManyAssets(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Locales to unpublish
    """
    locales: [Locale!]

    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true

    """
    Identifies documents in each stage
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)"
    )

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """

    """
    last: Int

    """
    Locales to unpublish
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true

    """
    Identifies documents in draft stage
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Unpublish many Author documents
  """
  unpublishManyAuthors(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: AuthorManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyAuthorsConnection)"
    )

  """
  Find many Author documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAuthorsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: AuthorManyWhereInput
  ): AuthorConnection!

  """
  Unpublish many Page documents
  """
  unpublishManyPages(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: PageManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyPagesConnection)"
    )

  """
  Find many Page documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyPagesConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: PageManyWhereInput
  ): PageConnection!

  """
  Unpublish many Post documents
  """
  unpublishManyPosts(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: PostManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyPostsConnection)"
    )

  """
  Find many Post documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyPostsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: PostManyWhereInput
  ): PostConnection!

  """
  Unpublish many Seo documents
  """
  unpublishManySeos(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: SeoManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManySeosConnection)"
    )

  """
  Find many Seo documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManySeosConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """

    """
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: SeoManyWhereInput
  ): SeoConnection!

  """
  Unpublish one page from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishPage(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Unpublish one post from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishPost(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishSeo(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Update one asset
  """
  updateAsset(
    data: AssetUpdateInput!
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Update one author
  """
  updateAuthor(
    data: AuthorUpdateInput!
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Update many assets
  """
  updateManyAssets(
    """
    Updates to document content
    """
    data: AssetUpdateManyInput!

    """
    Documents to apply update on
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyAssetsConnection)"
    )

  """
  Update many Asset documents
  """
  updateManyAssetsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """
    Updates to document content
    """
    data: AssetUpdateManyInput!

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to apply update on
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Update many authors
  """
  updateManyAuthors(
    """
    Updates to document content
    """
    data: AuthorUpdateManyInput!

    """
    Documents to apply update on
    """
    where: AuthorManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyAuthorsConnection)"
    )

  """
  Update many Author documents
  """
  updateManyAuthorsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """
    Updates to document content
    """
    data: AuthorUpdateManyInput!

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to apply update on
    """
    where: AuthorManyWhereInput
  ): AuthorConnection!

  """
  Update many pages
  """
  updateManyPages(
    """
    Updates to document content
    """
    data: PageUpdateManyInput!

    """
    Documents to apply update on
    """
    where: PageManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyPagesConnection)"
    )

  """
  Update many Page documents
  """
  updateManyPagesConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """
    Updates to document content
    """
    data: PageUpdateManyInput!

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to apply update on
    """
    where: PageManyWhereInput
  ): PageConnection!

  """
  Update many posts
  """
  updateManyPosts(
    """
    Updates to document content
    """
    data: PostUpdateManyInput!

    """
    Documents to apply update on
    """
    where: PostManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyPostsConnection)"
    )

  """
  Update many Post documents
  """
  updateManyPostsConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """
    Updates to document content
    """
    data: PostUpdateManyInput!

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to apply update on
    """
    where: PostManyWhereInput
  ): PostConnection!

  """
  Update many seos
  """
  updateManySeos(
    """
    Updates to document content
    """
    data: SeoUpdateManyInput!

    """
    Documents to apply update on
    """
    where: SeoManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManySeosConnection)"
    )

  """
  Update many Seo documents
  """
  updateManySeosConnection(
    """

    """
    after: ID

    """

    """
    before: ID

    """
    Updates to document content
    """
    data: SeoUpdateManyInput!

    """

    """
    first: Int

    """

    """
    last: Int

    """

    """
    skip: Int

    """
    Documents to apply update on
    """
    where: SeoManyWhereInput
  ): SeoConnection!

  """
  Update one page
  """
  updatePage(
    data: PageUpdateInput!
    where: PageWhereUniqueInput!
  ): Page

  """
  Update one post
  """
  updatePost(
    data: PostUpdateInput!
    where: PostWhereUniqueInput!
  ): Post

  """
  Update one scheduledRelease
  """
  updateScheduledRelease(
    data: ScheduledReleaseUpdateInput!
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Update one seo
  """
  updateSeo(data: SeoUpdateInput!, where: SeoWhereUniqueInput!): Seo

  """
  Upsert one asset
  """
  upsertAsset(
    upsert: AssetUpsertInput!
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Upsert one author
  """
  upsertAuthor(
    upsert: AuthorUpsertInput!
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Upsert one page
  """
  upsertPage(
    upsert: PageUpsertInput!
    where: PageWhereUniqueInput!
  ): Page

  """
  Upsert one post
  """
  upsertPost(
    upsert: PostUpsertInput!
    where: PostWhereUniqueInput!
  ): Post

  """
  Upsert one seo
  """
  upsertSeo(upsert: SeoUpsertInput!, where: SeoWhereUniqueInput!): Seo
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!

  """
  The Stage of an object
  """
  stage: Stage!
}

"""

"""
type Page implements Node {
  """
  Enter the content for this page. The content uses the rich-text editor, giving you a better visual representation.
  """
  content: RichText!

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Page!]!

  """
  List of Page versions
  """
  history(
    """

    """
    limit: Int! = 10

    """

    """
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """

  """
  scheduledIn(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Relate an SEO model to this page
  """
  seo(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Seo

  """
  Enter the slug for this page, such as about, blog, or contact
  """
  slug: String!

  """
  System stage field
  """
  stage: Stage!

  """
  Enter a short description to be used as a subtitle
  """
  subtitle: String

  """
  What is the title of your page?
  """
  title: String!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
input PageConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: PageWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type PageConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [PageEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input PageCreateInput {
  """

  """
  content: RichTextAST!

  """

  """
  createdAt: DateTime

  """

  """
  seo: SeoCreateOneInlineInput

  """

  """
  slug: String!

  """

  """
  subtitle: String

  """

  """
  title: String!

  """

  """
  updatedAt: DateTime
}

"""

"""
input PageCreateManyInlineInput {
  """
  Connect multiple existing Page documents
  """
  connect: [PageWhereUniqueInput!]

  """
  Create and connect multiple existing Page documents
  """
  create: [PageCreateInput!]
}

"""

"""
input PageCreateOneInlineInput {
  """
  Connect one existing Page document
  """
  connect: PageWhereUniqueInput

  """
  Create and connect one Page document
  """
  create: PageCreateInput
}

"""
An edge in a connection.
"""
type PageEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Page!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  Number of items in the current page.
  """
  pageSize: Int

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
Identifies documents
"""
input PageManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PageWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PageWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [PageWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seo: SeoWhereInput

  """

  """
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String!]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String!]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String

  """

  """
  subtitle: String

  """
  All values containing the given string.
  """
  subtitle_contains: String

  """
  All values ending with the given string.
  """
  subtitle_ends_with: String

  """
  All values that are contained in given list.
  """
  subtitle_in: [String!]

  """
  All values that are not equal to given value.
  """
  subtitle_not: String

  """
  All values not containing the given string.
  """
  subtitle_not_contains: String

  """
  All values not ending with the given string
  """
  subtitle_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  subtitle_not_in: [String!]

  """
  All values not starting with the given string.
  """
  subtitle_not_starts_with: String

  """
  All values starting with the given string.
  """
  subtitle_starts_with: String

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum PageOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  slug_ASC

  """

  """
  slug_DESC

  """

  """
  subtitle_ASC

  """

  """
  subtitle_DESC

  """

  """
  title_ASC

  """

  """
  title_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""

"""
input PageUpdateInput {
  """

  """
  content: RichTextAST

  """

  """
  seo: SeoUpdateOneInlineInput

  """

  """
  slug: String

  """

  """
  subtitle: String

  """

  """
  title: String
}

"""

"""
input PageUpdateManyInlineInput {
  """
  Connect multiple existing Page documents
  """
  connect: [PageConnectInput!]

  """
  Create and connect multiple Page documents
  """
  create: [PageCreateInput!]

  """
  Delete multiple Page documents
  """
  delete: [PageWhereUniqueInput!]

  """
  Disconnect multiple Page documents
  """
  disconnect: [PageWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Page documents
  """
  set: [PageWhereUniqueInput!]

  """
  Update multiple Page documents
  """
  update: [PageUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Page documents
  """
  upsert: [PageUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input PageUpdateManyInput {
  """

  """
  content: RichTextAST

  """

  """
  subtitle: String

  """

  """
  title: String
}

"""

"""
input PageUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: PageUpdateManyInput!

  """
  Document search
  """
  where: PageWhereInput!
}

"""

"""
input PageUpdateOneInlineInput {
  """
  Connect existing Page document
  """
  connect: PageWhereUniqueInput

  """
  Create and connect one Page document
  """
  create: PageCreateInput

  """
  Delete currently connected Page document
  """
  delete: Boolean

  """
  Disconnect currently connected Page document
  """
  disconnect: Boolean

  """
  Update single Page document
  """
  update: PageUpdateWithNestedWhereUniqueInput

  """
  Upsert single Page document
  """
  upsert: PageUpsertWithNestedWhereUniqueInput
}

"""

"""
input PageUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: PageUpdateInput!

  """
  Unique document search
  """
  where: PageWhereUniqueInput!
}

"""

"""
input PageUpsertInput {
  """
  Create document if it didn't exist
  """
  create: PageCreateInput!

  """
  Update document if it exists
  """
  update: PageUpdateInput!
}

"""

"""
input PageUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: PageUpsertInput!

  """
  Unique document search
  """
  where: PageWhereUniqueInput!
}

"""
Identifies documents
"""
input PageWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PageWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PageWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [PageWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seo: SeoWhereInput

  """

  """
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String!]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String!]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String

  """

  """
  subtitle: String

  """
  All values containing the given string.
  """
  subtitle_contains: String

  """
  All values ending with the given string.
  """
  subtitle_ends_with: String

  """
  All values that are contained in given list.
  """
  subtitle_in: [String!]

  """
  All values that are not equal to given value.
  """
  subtitle_not: String

  """
  All values not containing the given string.
  """
  subtitle_not_contains: String

  """
  All values not ending with the given string
  """
  subtitle_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  subtitle_not_in: [String!]

  """
  All values not starting with the given string.
  """
  subtitle_not_starts_with: String

  """
  All values starting with the given string.
  """
  subtitle_starts_with: String

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References Page record uniquely
"""
input PageWhereUniqueInput {
  """

  """
  id: ID

  """

  """
  slug: String
}

"""

"""
type Post implements Node {
  """
  Who should be credited with writing this post?
  """
  author(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `author` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Author

  """
  Write your blog post!
  """
  content: RichText!

  """
  Upload or select a cover image to set as your Featured Image
  """
  coverImage(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `coverImage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  What is the published date you would like to show for this post?
  """
  date: Date!

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Post!]!

  """
  Add a short excerpt to summarize this post
  """
  excerpt: String

  """
  List of Post versions
  """
  history(
    """

    """
    limit: Int! = 10

    """

    """
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """

  """
  scheduledIn(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Attach an SEO model to this post
  """
  seo(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Seo

  """
  Select a slug for this blog post, such as post-1, post-2, etc.
  """
  slug: String!

  """
  System stage field
  """
  stage: Stage!

  """
  Add any relevant tags to this blog post
  """
  tags: [String!]!

  """
  Name your blog post!
  """
  title: String!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
input PostConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: PostWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type PostConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [PostEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input PostCreateInput {
  """

  """
  author: AuthorCreateOneInlineInput

  """

  """
  content: RichTextAST!

  """

  """
  coverImage: AssetCreateOneInlineInput

  """

  """
  createdAt: DateTime

  """

  """
  date: Date!

  """

  """
  excerpt: String

  """

  """
  seo: SeoCreateOneInlineInput

  """

  """
  slug: String!

  """

  """
  tags: [String!]

  """

  """
  title: String!

  """

  """
  updatedAt: DateTime
}

"""

"""
input PostCreateManyInlineInput {
  """
  Connect multiple existing Post documents
  """
  connect: [PostWhereUniqueInput!]

  """
  Create and connect multiple existing Post documents
  """
  create: [PostCreateInput!]
}

"""

"""
input PostCreateOneInlineInput {
  """
  Connect one existing Post document
  """
  connect: PostWhereUniqueInput

  """
  Create and connect one Post document
  """
  create: PostCreateInput
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Post!
}

"""
Identifies documents
"""
input PostManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PostWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [PostWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  author: AuthorWhereInput

  """

  """
  coverImage: AssetWhereInput

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  date: Date

  """
  All values greater than the given value.
  """
  date_gt: Date

  """
  All values greater than or equal the given value.
  """
  date_gte: Date

  """
  All values that are contained in given list.
  """
  date_in: [Date!]

  """
  All values less than the given value.
  """
  date_lt: Date

  """
  All values less than or equal the given value.
  """
  date_lte: Date

  """
  All values that are not equal to given value.
  """
  date_not: Date

  """
  All values that are not contained in given list.
  """
  date_not_in: [Date!]

  """

  """
  excerpt: String

  """
  All values containing the given string.
  """
  excerpt_contains: String

  """
  All values ending with the given string.
  """
  excerpt_ends_with: String

  """
  All values that are contained in given list.
  """
  excerpt_in: [String!]

  """
  All values that are not equal to given value.
  """
  excerpt_not: String

  """
  All values not containing the given string.
  """
  excerpt_not_contains: String

  """
  All values not ending with the given string
  """
  excerpt_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  excerpt_not_in: [String!]

  """
  All values not starting with the given string.
  """
  excerpt_not_starts_with: String

  """
  All values starting with the given string.
  """
  excerpt_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seo: SeoWhereInput

  """

  """
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String!]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String!]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  tags: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  tags_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  tags_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  tags_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  tags_not: [String!]

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum PostOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  date_ASC

  """

  """
  date_DESC

  """

  """
  excerpt_ASC

  """

  """
  excerpt_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  slug_ASC

  """

  """
  slug_DESC

  """

  """
  tags_ASC

  """

  """
  tags_DESC

  """

  """
  title_ASC

  """

  """
  title_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""

"""
input PostUpdateInput {
  """

  """
  author: AuthorUpdateOneInlineInput

  """

  """
  content: RichTextAST

  """

  """
  coverImage: AssetUpdateOneInlineInput

  """

  """
  date: Date

  """

  """
  excerpt: String

  """

  """
  seo: SeoUpdateOneInlineInput

  """

  """
  slug: String

  """

  """
  tags: [String!]

  """

  """
  title: String
}

"""

"""
input PostUpdateManyInlineInput {
  """
  Connect multiple existing Post documents
  """
  connect: [PostConnectInput!]

  """
  Create and connect multiple Post documents
  """
  create: [PostCreateInput!]

  """
  Delete multiple Post documents
  """
  delete: [PostWhereUniqueInput!]

  """
  Disconnect multiple Post documents
  """
  disconnect: [PostWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Post documents
  """
  set: [PostWhereUniqueInput!]

  """
  Update multiple Post documents
  """
  update: [PostUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Post documents
  """
  upsert: [PostUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input PostUpdateManyInput {
  """

  """
  content: RichTextAST

  """

  """
  date: Date

  """

  """
  excerpt: String

  """

  """
  tags: [String!]

  """

  """
  title: String
}

"""

"""
input PostUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: PostUpdateManyInput!

  """
  Document search
  """
  where: PostWhereInput!
}

"""

"""
input PostUpdateOneInlineInput {
  """
  Connect existing Post document
  """
  connect: PostWhereUniqueInput

  """
  Create and connect one Post document
  """
  create: PostCreateInput

  """
  Delete currently connected Post document
  """
  delete: Boolean

  """
  Disconnect currently connected Post document
  """
  disconnect: Boolean

  """
  Update single Post document
  """
  update: PostUpdateWithNestedWhereUniqueInput

  """
  Upsert single Post document
  """
  upsert: PostUpsertWithNestedWhereUniqueInput
}

"""

"""
input PostUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: PostUpdateInput!

  """
  Unique document search
  """
  where: PostWhereUniqueInput!
}

"""

"""
input PostUpsertInput {
  """
  Create document if it didn't exist
  """
  create: PostCreateInput!

  """
  Update document if it exists
  """
  update: PostUpdateInput!
}

"""

"""
input PostUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: PostUpsertInput!

  """
  Unique document search
  """
  where: PostWhereUniqueInput!
}

"""
Identifies documents
"""
input PostWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PostWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [PostWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  author: AuthorWhereInput

  """

  """
  coverImage: AssetWhereInput

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  date: Date

  """
  All values greater than the given value.
  """
  date_gt: Date

  """
  All values greater than or equal the given value.
  """
  date_gte: Date

  """
  All values that are contained in given list.
  """
  date_in: [Date!]

  """
  All values less than the given value.
  """
  date_lt: Date

  """
  All values less than or equal the given value.
  """
  date_lte: Date

  """
  All values that are not equal to given value.
  """
  date_not: Date

  """
  All values that are not contained in given list.
  """
  date_not_in: [Date!]

  """

  """
  excerpt: String

  """
  All values containing the given string.
  """
  excerpt_contains: String

  """
  All values ending with the given string.
  """
  excerpt_ends_with: String

  """
  All values that are contained in given list.
  """
  excerpt_in: [String!]

  """
  All values that are not equal to given value.
  """
  excerpt_not: String

  """
  All values not containing the given string.
  """
  excerpt_not_contains: String

  """
  All values not ending with the given string
  """
  excerpt_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  excerpt_not_in: [String!]

  """
  All values not starting with the given string.
  """
  excerpt_not_starts_with: String

  """
  All values starting with the given string.
  """
  excerpt_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  seo: SeoWhereInput

  """

  """
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String!]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String!]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  tags: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  tags_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  tags_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  tags_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  tags_not: [String!]

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References Post record uniquely
"""
input PostWhereUniqueInput {
  """

  """
  id: ID

  """

  """
  slug: String
}

"""

"""
input PublishLocaleInput {
  """
  Locales to publish
  """
  locale: Locale!

  """
  Stages to publish selected locales to
  """
  stages: [Stage!]!
}

"""

"""
type Query {
  """
  Retrieve a single asset
  """
  asset(
    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Retrieve document version
  """
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple assets
  """
  assets(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: AssetOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AssetWhereInput
  ): [Asset!]!

  """
  Retrieve multiple assets using the Relay connection interface
  """
  assetsConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: AssetOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AssetWhereInput
  ): AssetConnection!

  """
  Retrieve a single author
  """
  author(
    """
    Defines which locales should be returned.

    Note that `Author` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AuthorWhereUniqueInput!
  ): Author

  """
  Retrieve document version
  """
  authorVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple authors
  """
  authors(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Author` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: AuthorOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AuthorWhereInput
  ): [Author!]!

  """
  Retrieve multiple authors using the Relay connection interface
  """
  authorsConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Author` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: AuthorOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: AuthorWhereInput
  ): AuthorConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!

    """
    Defines which locales should be returned.

    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED
  ): Node

  """
  Retrieve a single page
  """
  page(
    """
    Defines which locales should be returned.

    Note that `Page` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PageWhereUniqueInput!
  ): Page

  """
  Retrieve document version
  """
  pageVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple pages
  """
  pages(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Page` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: PageOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PageWhereInput
  ): [Page!]!

  """
  Retrieve multiple pages using the Relay connection interface
  """
  pagesConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Page` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: PageOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PageWhereInput
  ): PageConnection!

  """
  Retrieve a single post
  """
  post(
    """
    Defines which locales should be returned.

    Note that `Post` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PostWhereUniqueInput!
  ): Post

  """
  Retrieve document version
  """
  postVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple posts
  """
  posts(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Post` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: PostOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PostWhereInput
  ): [Post!]!

  """
  Retrieve multiple posts using the Relay connection interface
  """
  postsConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Post` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: PostOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: PostWhereInput
  ): PostConnection!

  """
  Retrieve a single scheduledOperation
  """
  scheduledOperation(
    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Retrieve multiple scheduledOperations
  """
  scheduledOperations(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: ScheduledOperationOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: ScheduledOperationOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!

  """
  Retrieve a single scheduledRelease
  """
  scheduledRelease(
    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Retrieve multiple scheduledReleases
  """
  scheduledReleases(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: ScheduledReleaseOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!

  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: ScheduledReleaseOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!

  """
  Retrieve a single seo
  """
  seo(
    """
    Defines which locales should be returned.

    Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: SeoWhereUniqueInput!
  ): Seo

  """
  Retrieve document version
  """
  seoVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple seos
  """
  seos(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: SeoOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: SeoWhereInput
  ): [Seo!]!

  """
  Retrieve multiple seos using the Relay connection interface
  """
  seosConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `Seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: SeoOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: SeoWhereInput
  ): SeoConnection!

  """
  Retrieve a single user
  """
  user(
    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: UserWhereUniqueInput!
  ): User

  """
  Retrieve multiple users
  """
  users(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: UserOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: UserWhereInput
  ): [User!]!

  """
  Retrieve multiple users using the Relay connection interface
  """
  usersConnection(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """

    """
    orderBy: UserOrderByInput

    """

    """
    skip: Int

    """

    """
    stage: Stage! = PUBLISHED

    """

    """
    where: UserWhereInput
  ): UserConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  """

  """
  a: RGBATransparency!

  """

  """
  b: RGBAHue!

  """

  """
  g: RGBAHue!

  """

  """
  r: RGBAHue!
}

"""

"""
scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  """

  """
  a: RGBATransparency!

  """

  """
  b: RGBAHue!

  """

  """
  g: RGBAHue!

  """

  """
  r: RGBAHue!
}

"""

"""
scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """
  Returns HTMl representation
  """
  html: String!

  """
  Returns Markdown representation
  """
  markdown: String!

  """
  Returns AST representation
  """
  raw: RichTextAST!

  """
  Returns plain-text contents of RichText
  """
  text: String!
}

"""
Slate-compatible RichText AST
"""
scalar RichTextAST

"""
Scheduled Operation system model
"""
type ScheduledOperation implements Node {
  """

  """
  affectedDocuments(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Operation description
  """
  description: String

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledOperation!]!

  """
  Operation error message
  """
  errorMessage: String

  """
  The unique identifier
  """
  id: ID!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!

  """
  The release this operation is scheduled for
  """
  release(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease

  """
  System stage field
  """
  stage: Stage!

  """
  operation Status
  """
  status: ScheduledOperationStatus!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
union ScheduledOperationAffectedDocument =
    Asset
  | Author
  | Page
  | Post
  | Seo

"""

"""
input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ScheduledOperationWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ScheduledOperationConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ScheduledOperationEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input ScheduledOperationCreateManyInlineInput {
  """
  Connect multiple existing ScheduledOperation documents
  """
  connect: [ScheduledOperationWhereUniqueInput!]
}

"""

"""
input ScheduledOperationCreateOneInlineInput {
  """
  Connect one existing ScheduledOperation document
  """
  connect: ScheduledOperationWhereUniqueInput
}

"""
An edge in a connection.
"""
type ScheduledOperationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ScheduledOperation!
}

"""
Identifies documents
"""
input ScheduledOperationManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledOperationWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledOperationWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledOperationWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String!]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String!]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  release: ScheduledReleaseWhereInput

  """

  """
  status: ScheduledOperationStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledOperationStatus!]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledOperationStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledOperationStatus!]

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum ScheduledOperationOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  description_ASC

  """

  """
  description_DESC

  """

  """
  errorMessage_ASC

  """

  """
  errorMessage_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  status_ASC

  """

  """
  status_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""
System Scheduled Operation Status
"""
enum ScheduledOperationStatus {
  """

  """
  CANCELED

  """

  """
  COMPLETED

  """

  """
  FAILED

  """

  """
  IN_PROGRESS

  """

  """
  PENDING
}

"""

"""
input ScheduledOperationUpdateManyInlineInput {
  """
  Connect multiple existing ScheduledOperation documents
  """
  connect: [ScheduledOperationConnectInput!]

  """
  Disconnect multiple ScheduledOperation documents
  """
  disconnect: [ScheduledOperationWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

"""

"""
input ScheduledOperationUpdateOneInlineInput {
  """
  Connect existing ScheduledOperation document
  """
  connect: ScheduledOperationWhereUniqueInput

  """
  Disconnect currently connected ScheduledOperation document
  """
  disconnect: Boolean
}

"""
Identifies documents
"""
input ScheduledOperationWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledOperationWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledOperationWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledOperationWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String!]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String!]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  release: ScheduledReleaseWhereInput

  """

  """
  status: ScheduledOperationStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledOperationStatus!]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledOperationStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledOperationStatus!]

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References ScheduledOperation record uniquely
"""
input ScheduledOperationWhereUniqueInput {
  """

  """
  id: ID
}

"""
Scheduled Release system model
"""
type ScheduledRelease implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Release description
  """
  description: String

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledRelease!]!

  """
  Release error message
  """
  errorMessage: String

  """
  The unique identifier
  """
  id: ID!

  """
  Whether scheduled release should be run
  """
  isActive: Boolean!

  """
  Whether scheduled release is implicit
  """
  isImplicit: Boolean!

  """
  Operations to run with this release
  """
  operations(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    orderBy: ScheduledOperationOrderByInput

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Release date and time
  """
  releaseAt: DateTime

  """
  System stage field
  """
  stage: Stage!

  """
  Release Status
  """
  status: ScheduledReleaseStatus!

  """
  Release Title
  """
  title: String

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ScheduledReleaseWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ScheduledReleaseConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ScheduledReleaseEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input ScheduledReleaseCreateInput {
  """

  """
  createdAt: DateTime

  """

  """
  description: String

  """

  """
  errorMessage: String

  """

  """
  isActive: Boolean = true

  """

  """
  releaseAt: DateTime

  """

  """
  title: String

  """

  """
  updatedAt: DateTime
}

"""

"""
input ScheduledReleaseCreateManyInlineInput {
  """
  Connect multiple existing ScheduledRelease documents
  """
  connect: [ScheduledReleaseWhereUniqueInput!]

  """
  Create and connect multiple existing ScheduledRelease documents
  """
  create: [ScheduledReleaseCreateInput!]
}

"""

"""
input ScheduledReleaseCreateOneInlineInput {
  """
  Connect one existing ScheduledRelease document
  """
  connect: ScheduledReleaseWhereUniqueInput

  """
  Create and connect one ScheduledRelease document
  """
  create: ScheduledReleaseCreateInput
}

"""
An edge in a connection.
"""
type ScheduledReleaseEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ScheduledRelease!
}

"""
Identifies documents
"""
input ScheduledReleaseManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledReleaseWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledReleaseWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledReleaseWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String!]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String!]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean

  """

  """
  isImplicit: Boolean

  """
  All values that are not equal to given value.
  """
  isImplicit_not: Boolean

  """

  """
  operations_every: ScheduledOperationWhereInput

  """

  """
  operations_none: ScheduledOperationWhereInput

  """

  """
  operations_some: ScheduledOperationWhereInput

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  releaseAt: DateTime

  """
  All values greater than the given value.
  """
  releaseAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  releaseAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  releaseAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  releaseAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  releaseAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  releaseAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  releaseAt_not_in: [DateTime!]

  """

  """
  status: ScheduledReleaseStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledReleaseStatus!]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledReleaseStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledReleaseStatus!]

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum ScheduledReleaseOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  description_ASC

  """

  """
  description_DESC

  """

  """
  errorMessage_ASC

  """

  """
  errorMessage_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  isActive_ASC

  """

  """
  isActive_DESC

  """

  """
  isImplicit_ASC

  """

  """
  isImplicit_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  releaseAt_ASC

  """

  """
  releaseAt_DESC

  """

  """
  status_ASC

  """

  """
  status_DESC

  """

  """
  title_ASC

  """

  """
  title_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""
System Scheduled Release Status
"""
enum ScheduledReleaseStatus {
  """

  """
  COMPLETED

  """

  """
  FAILED

  """

  """
  IN_PROGRESS

  """

  """
  PENDING
}

"""

"""
input ScheduledReleaseUpdateInput {
  """

  """
  description: String

  """

  """
  errorMessage: String

  """

  """
  isActive: Boolean

  """

  """
  releaseAt: DateTime

  """

  """
  title: String
}

"""

"""
input ScheduledReleaseUpdateManyInlineInput {
  """
  Connect multiple existing ScheduledRelease documents
  """
  connect: [ScheduledReleaseConnectInput!]

  """
  Create and connect multiple ScheduledRelease documents
  """
  create: [ScheduledReleaseCreateInput!]

  """
  Delete multiple ScheduledRelease documents
  """
  delete: [ScheduledReleaseWhereUniqueInput!]

  """
  Disconnect multiple ScheduledRelease documents
  """
  disconnect: [ScheduledReleaseWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]

  """
  Update multiple ScheduledRelease documents
  """
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple ScheduledRelease documents
  """
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input ScheduledReleaseUpdateManyInput {
  """

  """
  description: String

  """

  """
  errorMessage: String

  """

  """
  isActive: Boolean

  """

  """
  releaseAt: DateTime

  """

  """
  title: String
}

"""

"""
input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: ScheduledReleaseUpdateManyInput!

  """
  Document search
  """
  where: ScheduledReleaseWhereInput!
}

"""

"""
input ScheduledReleaseUpdateOneInlineInput {
  """
  Connect existing ScheduledRelease document
  """
  connect: ScheduledReleaseWhereUniqueInput

  """
  Create and connect one ScheduledRelease document
  """
  create: ScheduledReleaseCreateInput

  """
  Delete currently connected ScheduledRelease document
  """
  delete: Boolean

  """
  Disconnect currently connected ScheduledRelease document
  """
  disconnect: Boolean

  """
  Update single ScheduledRelease document
  """
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput

  """
  Upsert single ScheduledRelease document
  """
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

"""

"""
input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: ScheduledReleaseUpdateInput!

  """
  Unique document search
  """
  where: ScheduledReleaseWhereUniqueInput!
}

"""

"""
input ScheduledReleaseUpsertInput {
  """
  Create document if it didn't exist
  """
  create: ScheduledReleaseCreateInput!

  """
  Update document if it exists
  """
  update: ScheduledReleaseUpdateInput!
}

"""

"""
input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: ScheduledReleaseUpsertInput!

  """
  Unique document search
  """
  where: ScheduledReleaseWhereUniqueInput!
}

"""
Identifies documents
"""
input ScheduledReleaseWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledReleaseWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledReleaseWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledReleaseWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String!]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String!]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean

  """

  """
  isImplicit: Boolean

  """
  All values that are not equal to given value.
  """
  isImplicit_not: Boolean

  """

  """
  operations_every: ScheduledOperationWhereInput

  """

  """
  operations_none: ScheduledOperationWhereInput

  """

  """
  operations_some: ScheduledOperationWhereInput

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  releaseAt: DateTime

  """
  All values greater than the given value.
  """
  releaseAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  releaseAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  releaseAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  releaseAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  releaseAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  releaseAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  releaseAt_not_in: [DateTime!]

  """

  """
  status: ScheduledReleaseStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledReleaseStatus!]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledReleaseStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledReleaseStatus!]

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References ScheduledRelease record uniquely
"""
input ScheduledReleaseWhereUniqueInput {
  """

  """
  id: ID
}

"""

"""
type Seo implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Create a custom meta description
  """
  description: String

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Seo!]!

  """
  List of Seo versions
  """
  history(
    """

    """
    limit: Int! = 10

    """

    """
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  Select a custom OG image (the most common size is usually 1280x720)
  """
  image(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """
  Select your focus keywords
  """
  keywords: [String!]!

  """
  What pages and blog posts would this SEO apply to?
  """
  parent(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `parent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): SeoParent

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """

  """
  scheduledIn(
    """

    """
    after: String

    """

    """
    before: String

    """

    """
    first: Int

    """

    """
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """

    """
    skip: Int

    """

    """
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  System stage field
  """
  stage: Stage!

  """
  Create a custom meta title
  """
  title: String

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

"""

"""
input SeoConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: SeoWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type SeoConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [SeoEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input SeoCreateInput {
  """

  """
  createdAt: DateTime

  """

  """
  description: String

  """

  """
  image: AssetCreateOneInlineInput

  """

  """
  keywords: [String!]

  """

  """
  parent: SeoParentCreateOneInlineInput

  """

  """
  title: String

  """

  """
  updatedAt: DateTime
}

"""

"""
input SeoCreateManyInlineInput {
  """
  Connect multiple existing Seo documents
  """
  connect: [SeoWhereUniqueInput!]

  """
  Create and connect multiple existing Seo documents
  """
  create: [SeoCreateInput!]
}

"""

"""
input SeoCreateOneInlineInput {
  """
  Connect one existing Seo document
  """
  connect: SeoWhereUniqueInput

  """
  Create and connect one Seo document
  """
  create: SeoCreateInput
}

"""
An edge in a connection.
"""
type SeoEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Seo!
}

"""
Identifies documents
"""
input SeoManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SeoWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SeoWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SeoWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  image: AssetWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  keywords: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  keywords_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  keywords_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  keywords_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  keywords_not: [String!]

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""

"""
enum SeoOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  description_ASC

  """

  """
  description_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  keywords_ASC

  """

  """
  keywords_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  title_ASC

  """

  """
  title_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""

"""
union SeoParent = Page | Post

"""

"""
input SeoParentConnectInput {
  """

  """
  Page: PageConnectInput

  """

  """
  Post: PostConnectInput
}

"""

"""
input SeoParentCreateInput {
  """

  """
  Page: PageCreateInput

  """

  """
  Post: PostCreateInput
}

"""

"""
input SeoParentCreateManyInlineInput {
  """
  Connect multiple existing SeoParent documents
  """
  connect: [SeoParentWhereUniqueInput!]

  """
  Create and connect multiple existing SeoParent documents
  """
  create: [SeoParentCreateInput!]
}

"""

"""
input SeoParentCreateOneInlineInput {
  """
  Connect one existing SeoParent document
  """
  connect: SeoParentWhereUniqueInput

  """
  Create and connect one SeoParent document
  """
  create: SeoParentCreateInput
}

"""

"""
input SeoParentUpdateInput {
  """

  """
  Page: PageUpdateInput

  """

  """
  Post: PostUpdateInput
}

"""

"""
input SeoParentUpdateManyInlineInput {
  """
  Connect multiple existing SeoParent documents
  """
  connect: [SeoParentConnectInput!]

  """
  Create and connect multiple SeoParent documents
  """
  create: [SeoParentCreateInput!]

  """
  Delete multiple SeoParent documents
  """
  delete: [SeoParentWhereUniqueInput!]

  """
  Disconnect multiple SeoParent documents
  """
  disconnect: [SeoParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing SeoParent documents
  """
  set: [SeoParentWhereUniqueInput!]

  """
  Update multiple SeoParent documents
  """
  update: [SeoParentUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple SeoParent documents
  """
  upsert: [SeoParentUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input SeoParentUpdateManyWithNestedWhereInput {
  """

  """
  Page: PageUpdateManyWithNestedWhereInput

  """

  """
  Post: PostUpdateManyWithNestedWhereInput
}

"""

"""
input SeoParentUpdateOneInlineInput {
  """
  Connect existing SeoParent document
  """
  connect: SeoParentWhereUniqueInput

  """
  Create and connect one SeoParent document
  """
  create: SeoParentCreateInput

  """
  Delete currently connected SeoParent document
  """
  delete: Boolean

  """
  Disconnect currently connected SeoParent document
  """
  disconnect: Boolean

  """
  Update single SeoParent document
  """
  update: SeoParentUpdateWithNestedWhereUniqueInput

  """
  Upsert single SeoParent document
  """
  upsert: SeoParentUpsertWithNestedWhereUniqueInput
}

"""

"""
input SeoParentUpdateWithNestedWhereUniqueInput {
  """

  """
  Page: PageUpdateWithNestedWhereUniqueInput

  """

  """
  Post: PostUpdateWithNestedWhereUniqueInput
}

"""

"""
input SeoParentUpsertWithNestedWhereUniqueInput {
  """

  """
  Page: PageUpsertWithNestedWhereUniqueInput

  """

  """
  Post: PostUpsertWithNestedWhereUniqueInput
}

"""

"""
input SeoParentWhereInput {
  """

  """
  Page: PageWhereInput

  """

  """
  Post: PostWhereInput
}

"""

"""
input SeoParentWhereUniqueInput {
  """

  """
  Page: PageWhereUniqueInput

  """

  """
  Post: PostWhereUniqueInput
}

"""

"""
input SeoUpdateInput {
  """

  """
  description: String

  """

  """
  image: AssetUpdateOneInlineInput

  """

  """
  keywords: [String!]

  """

  """
  parent: SeoParentUpdateOneInlineInput

  """

  """
  title: String
}

"""

"""
input SeoUpdateManyInlineInput {
  """
  Connect multiple existing Seo documents
  """
  connect: [SeoConnectInput!]

  """
  Create and connect multiple Seo documents
  """
  create: [SeoCreateInput!]

  """
  Delete multiple Seo documents
  """
  delete: [SeoWhereUniqueInput!]

  """
  Disconnect multiple Seo documents
  """
  disconnect: [SeoWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Seo documents
  """
  set: [SeoWhereUniqueInput!]

  """
  Update multiple Seo documents
  """
  update: [SeoUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Seo documents
  """
  upsert: [SeoUpsertWithNestedWhereUniqueInput!]
}

"""

"""
input SeoUpdateManyInput {
  """

  """
  description: String

  """

  """
  keywords: [String!]

  """

  """
  title: String
}

"""

"""
input SeoUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: SeoUpdateManyInput!

  """
  Document search
  """
  where: SeoWhereInput!
}

"""

"""
input SeoUpdateOneInlineInput {
  """
  Connect existing Seo document
  """
  connect: SeoWhereUniqueInput

  """
  Create and connect one Seo document
  """
  create: SeoCreateInput

  """
  Delete currently connected Seo document
  """
  delete: Boolean

  """
  Disconnect currently connected Seo document
  """
  disconnect: Boolean

  """
  Update single Seo document
  """
  update: SeoUpdateWithNestedWhereUniqueInput

  """
  Upsert single Seo document
  """
  upsert: SeoUpsertWithNestedWhereUniqueInput
}

"""

"""
input SeoUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: SeoUpdateInput!

  """
  Unique document search
  """
  where: SeoWhereUniqueInput!
}

"""

"""
input SeoUpsertInput {
  """
  Create document if it didn't exist
  """
  create: SeoCreateInput!

  """
  Update document if it exists
  """
  update: SeoUpdateInput!
}

"""

"""
input SeoUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: SeoUpsertInput!

  """
  Unique document search
  """
  where: SeoWhereUniqueInput!
}

"""
Identifies documents
"""
input SeoWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SeoWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SeoWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SeoWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  createdBy: UserWhereInput

  """

  """
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  image: AssetWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  keywords: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  keywords_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  keywords_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  keywords_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  keywords_not: [String!]

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  publishedBy: UserWhereInput

  """

  """
  scheduledIn_every: ScheduledOperationWhereInput

  """

  """
  scheduledIn_none: ScheduledOperationWhereInput

  """

  """
  scheduledIn_some: ScheduledOperationWhereInput

  """

  """
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """

  """
  updatedBy: UserWhereInput
}

"""
References Seo record uniquely
"""
input SeoWhereUniqueInput {
  """

  """
  id: ID
}

"""
Stage system enumeration
"""
enum Stage {
  """
  The Draft is the default stage for all your content.
  """
  DRAFT

  """
  The Published stage is where you can publish your content to.
  """
  PUBLISHED
}

"""

"""
enum SystemDateTimeFieldVariation {
  """

  """
  BASE

  """

  """
  COMBINED

  """

  """
  LOCALIZATION
}

"""

"""
input UnpublishLocaleInput {
  """
  Locales to unpublish
  """
  locale: Locale!

  """
  Stages to unpublish selected locales from
  """
  stages: [Stage!]!
}

"""
User system model
"""
type User implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [User!]!

  """
  The unique identifier
  """
  id: ID!

  """
  Flag to determine if user is active or not
  """
  isActive: Boolean!

  """
  User Kind. Can be either MEMBER, PAT or PUBLIC
  """
  kind: UserKind!

  """
  The username
  """
  name: String!

  """
  Profile Picture url
  """
  picture: String

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt: DateTime!
}

"""

"""
input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: UserWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type UserConnection {
  """

  """
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""

"""
input UserCreateManyInlineInput {
  """
  Connect multiple existing User documents
  """
  connect: [UserWhereUniqueInput!]
}

"""

"""
input UserCreateOneInlineInput {
  """
  Connect one existing User document
  """
  connect: UserWhereUniqueInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User!
}

"""
System User Kind
"""
enum UserKind {
  """

  """
  MEMBER

  """

  """
  PAT

  """

  """
  PUBLIC

  """

  """
  WEBHOOK
}

"""
Identifies documents
"""
input UserManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean

  """

  """
  kind: UserKind

  """
  All values that are contained in given list.
  """
  kind_in: [UserKind!]

  """
  All values that are not equal to given value.
  """
  kind_not: UserKind

  """
  All values that are not contained in given list.
  """
  kind_not_in: [UserKind!]

  """

  """
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """

  """
  picture: String

  """
  All values containing the given string.
  """
  picture_contains: String

  """
  All values ending with the given string.
  """
  picture_ends_with: String

  """
  All values that are contained in given list.
  """
  picture_in: [String!]

  """
  All values that are not equal to given value.
  """
  picture_not: String

  """
  All values not containing the given string.
  """
  picture_not_contains: String

  """
  All values not ending with the given string
  """
  picture_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  picture_not_in: [String!]

  """
  All values not starting with the given string.
  """
  picture_not_starts_with: String

  """
  All values starting with the given string.
  """
  picture_starts_with: String

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
}

"""

"""
enum UserOrderByInput {
  """

  """
  createdAt_ASC

  """

  """
  createdAt_DESC

  """

  """
  id_ASC

  """

  """
  id_DESC

  """

  """
  isActive_ASC

  """

  """
  isActive_DESC

  """

  """
  kind_ASC

  """

  """
  kind_DESC

  """

  """
  name_ASC

  """

  """
  name_DESC

  """

  """
  picture_ASC

  """

  """
  picture_DESC

  """

  """
  publishedAt_ASC

  """

  """
  publishedAt_DESC

  """

  """
  updatedAt_ASC

  """

  """
  updatedAt_DESC
}

"""

"""
input UserUpdateManyInlineInput {
  """
  Connect multiple existing User documents
  """
  connect: [UserConnectInput!]

  """
  Disconnect multiple User documents
  """
  disconnect: [UserWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

"""

"""
input UserUpdateOneInlineInput {
  """
  Connect existing User document
  """
  connect: UserWhereUniqueInput

  """
  Disconnect currently connected User document
  """
  disconnect: Boolean
}

"""
Identifies documents
"""
input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """

  """
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """

  """
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """

  """
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean

  """

  """
  kind: UserKind

  """
  All values that are contained in given list.
  """
  kind_in: [UserKind!]

  """
  All values that are not equal to given value.
  """
  kind_not: UserKind

  """
  All values that are not contained in given list.
  """
  kind_not_in: [UserKind!]

  """

  """
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """

  """
  picture: String

  """
  All values containing the given string.
  """
  picture_contains: String

  """
  All values ending with the given string.
  """
  picture_ends_with: String

  """
  All values that are contained in given list.
  """
  picture_in: [String!]

  """
  All values that are not equal to given value.
  """
  picture_not: String

  """
  All values not containing the given string.
  """
  picture_not_contains: String

  """
  All values not ending with the given string
  """
  picture_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  picture_not_in: [String!]

  """
  All values not starting with the given string.
  """
  picture_not_starts_with: String

  """
  All values starting with the given string.
  """
  picture_starts_with: String

  """

  """
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """

  """
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
}

"""
References User record uniquely
"""
input UserWhereUniqueInput {
  """

  """
  id: ID
}

"""

"""
type Version {
  """

  """
  createdAt: DateTime!

  """

  """
  id: ID!

  """

  """
  revision: Int!

  """

  """
  stage: Stage!
}

"""

"""
input VersionWhereInput {
  """

  """
  id: ID!

  """

  """
  revision: Int!

  """

  """
  stage: Stage!
}

"""

"""
enum _FilterKind {
  """

  """
  AND

  """

  """
  NOT

  """

  """
  OR

  """

  """
  contains

  """

  """
  contains_all

  """

  """
  contains_none

  """

  """
  contains_some

  """

  """
  ends_with

  """

  """
  eq

  """

  """
  eq_not

  """

  """
  gt

  """

  """
  gte

  """

  """
  in

  """

  """
  lt

  """

  """
  lte

  """

  """
  not_contains

  """

  """
  not_ends_with

  """

  """
  not_in

  """

  """
  not_starts_with

  """

  """
  relational_every

  """

  """
  relational_none

  """

  """
  relational_single

  """

  """
  relational_some

  """

  """
  search

  """

  """
  starts_with
}

"""

"""
enum _MutationInputFieldKind {
  """

  """
  enum

  """

  """
  relation

  """

  """
  richText

  """

  """
  richTextWithEmbeds

  """

  """
  scalar

  """

  """
  union

  """

  """
  virtual
}

"""

"""
enum _MutationKind {
  """

  """
  create

  """

  """
  delete

  """

  """
  deleteMany

  """

  """
  publish

  """

  """
  publishMany

  """

  """
  unpublish

  """

  """
  unpublishMany

  """

  """
  update

  """

  """
  updateMany

  """

  """
  upsert
}

"""

"""
enum _OrderDirection {
  """

  """
  asc

  """

  """
  desc
}

"""

"""
enum _RelationInputCardinality {
  """

  """
  many

  """

  """
  one
}

"""

"""
enum _RelationInputKind {
  """

  """
  create

  """

  """
  update
}

"""

"""
enum _RelationKind {
  """

  """
  regular

  """

  """
  union
}

"""

"""
enum _SystemDateTimeFieldVariation {
  """

  """
  base

  """

  """
  combined

  """

  """
  localization
}
